<?xml version="1.0"?>
<launch>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="world_model" default="simple3.world" />
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find soma_description)/urdf/soma.urdf.xacro"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_model)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
    <rosparam command="load" file="$(find soma_description)/config/joint_state_controller.yaml" ns="/soma" />
    <rosparam command="load" file="$(find soma_description)/config/ackermann_steering_controller.yaml" ns="/soma" />


    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model robot -param robot_description" respawn="false" output="screen" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/soma" args="joint_state_controller ackermann_steering_controller" />
    <node name="robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering"/>

</launch>