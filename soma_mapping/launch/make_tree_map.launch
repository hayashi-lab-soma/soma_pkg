<?xml version="1.0"?>
<launch>

	<arg name="input_map" default="/map_points" doc="" />
	<arg name="nodelet_manager" default="map_manager" doc="" />
	<arg name="centroids_poses_topic" default="~centroid_pose_array" />

	<node name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager" output="screen" />

	<!-- filter -->
	<node name="map_downsampling" pkg="nodelet" type="nodelet" output="screen" args="load pcl/VoxelGrid $(arg nodelet_manager)">
		<remap from="~input" to="$(arg input_map)" />
		<remap from="~output" to="$(arg input_map)_filtered" />
		<param name="filter_field_name" value="z" />
		<param name="leaf_size" value="0.1" />
		<param name="filter_limit_min" value="-100" />
		<param name="filter_limit_max" value="100" />
	</node>

	<!-- Euclidean clustering -->
	<node name="clustering" pkg="nodelet" type="nodelet" output="screen" args="load jsk_pcl/EuclideanClustering $(arg nodelet_manager)">
		<remap from="~input" to="$(arg input_map)_filtered" />
		<param name="tolerance" value="0.6" />
		<param name="min_size" value="80" />
	</node>
	<!-- decompose -->
	<node name="cluster_decomposer" pkg="nodelet" type="nodelet" output="screen" args="load jsk_pcl/ClusterPointIndicesDecomposerZAxis $(arg nodelet_manager)">
		<remap from="~input" to="$(arg input_map)_filtered" />
		<remap from="~target" to="/clustering/output" />
		<remap from="~centroid_pose_array" to="$(arg centroids_poses_topic)"/>
		<param name="publish_clouds" value="true" />
	</node>

	<!-- <node name="modify_indices" pkg="nodelet" type="nodelet" output="screen" args="load jsk_pcl_utils/ClusterPointIndicesToPointIndices $(arg nodelet_manager)">
		<remap from="~input" to="/cluster_decomposer/cluster_indices" />
	</node>

	<node pkg="soma_mapping" type="independent_clusters.py" name="independent_clusters" />

	<node name="extract_indices" pkg="nodelet" type="nodelet" output="screen" args="load jsk_pcl/ExtractIndices $(arg nodelet_manager)">
		<remap from="~input" to="$(arg input_map)_filtered" />
		<remap from="~indices" to="/independent_cluster" />
	</node> -->

	<!-- Find trees -->
	<!-- <node name="circle_finder" pkg="nodelet" type="nodelet" output="screen" args="load jsk_pcl/TorusFinder $(arg nodelet_manager)"> -->
	<!-- <remap from="~input" to="/scan" /> -->
	<!-- </node> -->

	<!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pcd_to_lscan"> -->
		<!-- <remap from="cloud_in" to="/cluster_decomposer/output00" /> -->
	<!-- </node> -->

	<node name="find_circles0" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output00" />
		<remap from="trees_centers2" to="/tree0" />
	</node>

	<node name="find_circles1" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output01" />
		<remap from="trees_centers2" to="/tree1" />
	</node>

	<node name="find_circles2" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output02" />
		<remap from="trees_centers2" to="/tree2" />
	</node>

	<node name="find_circles3" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output03" />
		<remap from="trees_centers2" to="/tree3" />
	</node>

	<node name="find_circles4" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output04" />
		<remap from="trees_centers2" to="/tree4" />
	</node>

	<node name="find_circles5" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output05" />
		<remap from="trees_centers2" to="/tree5" />
	</node>

	<node name="find_circles6" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output06" />
		<remap from="trees_centers2" to="/tree6" />
	</node>

	<node name="find_circles7" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output07" />
		<remap from="trees_centers2" to="/tree7" />
	</node>

	<node name="find_circles8" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output08" />
		<remap from="trees_centers2" to="/tree8" />
	</node>

	<node name="find_circles9" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output09" />
		<remap from="trees_centers2" to="/tree9" />
	</node>

	<node name="find_circles10" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output10" />
		<remap from="trees_centers2" to="/tree10" />
	</node>

	<node name="find_circles11" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output11" />
		<remap from="trees_centers2" to="/tree11" />
	</node>

	<node name="find_circles12" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output12" />
		<remap from="trees_centers2" to="/tree12" />
	</node>

	<node name="find_circles13" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output13" />
		<remap from="trees_centers2" to="/tree13" />
	</node>

	<node name="find_circles14" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output14" />
		<remap from="trees_centers2" to="/tree14" />
	</node>

	<node name="find_circles15" pkg="nodelet" type="nodelet" output="screen" args="load soma_perception/DiameterEstimationNodelet $(arg nodelet_manager)">
		<param name="base_link" value="base_link" />
		<remap from="input_points" to="/cluster_decomposer/output15" />
		<remap from="trees_centers2" to="/tree15" />
	</node>

	<node name="fuse_centers" pkg="soma_mapping" type="tree_coordinates.py"/>

	<!-- Estimate point normals -->
	<!-- <node name="normal_estimation" pkg="nodelet" type="nodelet" args="load pcl/NormalEstimation $(arg nodelet_manager)" output="screen"> -->
		<!-- <remap from="~input" to="/cluster_decomposer/output00" /> -->
		<!-- <rosparam param="k_search"> 0 </rosparam> -->
		<!-- <rosparam param="radius_search"> 0.015 </rosparam> -->
		<!-- <rosparam param="spatial_locator"> 0 </rosparam> -->
	<!-- </node> -->

	<!-- Segment the table plane -->
	<!-- <node name="planar_segmentation" pkg="nodelet" type="nodelet" args="load pcl/SACSegmentationFromNormals $(arg nodelet_manager)" output="screen"> -->
		<!-- <remap from="~input" to="/cluster_decomposer/output00" /> -->
		<!-- <remap from="~normals" to="/normal_estimation/output" /> -->
		<!-- <rosparam param="model_type"> 5 </rosparam> -->
		<!-- model_type: -->
		<!-- 0: SACMODEL_PLANE -->
		<!-- 1: SACMODEL_LINE -->
		<!-- 2: SACMODEL_CIRCLE2D -->
		<!-- 3: SACMODEL_CIRCLE3D -->
		<!-- 4: SACMODEL_SPHERE -->
		<!-- 5: SACMODEL_CYLINDER -->
		<!-- 6: SACMODEL_CONE -->
		<!-- 7: SACMODEL_TORUS -->
		<!-- 8: SACMODEL_PARALLEL_LINE -->
		<!-- 9: SACMODEL_PERPENDICULAR_PLANE -->
		<!-- 10: SACMODEL_PARALLEL_LINES -->
		<!-- 11: SACMODEL_NORMAL_PLANE -->
		<!-- 12: SACMODEL_NORMAL_SPHERE -->
		<!-- 13: SACMODEL_REGISTRATION -->
		<!-- 14: SACMODEL_REGISTRATION_2D -->
		<!-- 15: SACMODEL_PARALLEL_PLANE -->
		<!-- 16: SACMODEL_NORMAL_PARALLEL_PLANE -->
		<!-- 17: SACMODEL_STICK -->
		<!-- <rosparam param="distance_threshold"> 0.1 </rosparam> -->
		<!-- <rosparam param="max_iterations"> 1000 </rosparam> -->
		<!-- <rosparam param="method_type"> 0 </rosparam> -->
		<!-- <rosparam param="optimize_coefficients"> true </rosparam> -->
		<!-- <rosparam param="normal_distance_weight"> 0.1 </rosparam> -->
		<!-- <rosparam param="eps_angle"> 0.09 </rosparam> -->
		<!-- <rosparam param="distance_threshold"> 100 </rosparam> -->
		<!-- <rosparam param="max_iterations"> 10000 </rosparam> -->
		<!-- <rosparam param="method_type"> 0 </rosparam> -->
		<!-- <rosparam param="optimize_coefficients"> true </rosparam> -->
		<!-- <rosparam param="normal_distance_weight"> 100 </rosparam> -->
		<!-- <rosparam param="eps_angle"> 100 </rosparam> -->
		<!-- <rosparam param="radius_min"> 1 </rosparam> -->
		<!-- <rosparam param="radius_max"> 3 </rosparam> -->
	<!-- </node> -->

	<!-- <node name="extract_plane_indices" pkg="nodelet" type="nodelet" args="load jsk_pcl/ExtractIndices $(arg nodelet_manager)" output="screen"> -->
		<!-- <remap from="~input" to="/cluster_decomposer/output00" /> -->
		<!-- <remap from="~indices" to="/planar_segmentation/inliers" /> -->
		<!-- <rosparam param="negative"> true </rosparam> -->
	<!-- </node> -->

	<!-- <node pkg="soma_mapping" type="tree_coordinates.py" name="trees_centers"/> -->

</launch>
